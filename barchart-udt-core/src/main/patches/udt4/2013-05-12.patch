diff --git work/git/barchart-udt/barchart-udt-core/target/udt/udt4/src/core.cpp work/git/barchart-udt/barchart-udt-core/src/main/c++/udt/src/core.cpp
index 1f3b206..17fc960 100644
--- work/git/barchart-udt/barchart-udt-core/target/udt/udt4/src/core.cpp
+++ work/git/barchart-udt/barchart-udt-core/src/main/c++/udt/src/core.cpp
@@ -952,7 +952,13 @@ void CUDT::close()
       m_pSndQueue->m_pSndUList->remove(this);
 
    // trigger any pending IO events.
+   // s_UDTUnited.m_EPoll.update_events(m_SocketID, m_sPollID, UDT_EPOLL_ERR, true);
+
+   // BARCHART: Trigger pending events as errors; CEPoll::wait does error cleanup.
+   s_UDTUnited.m_EPoll.update_events(m_SocketID, m_sPollID, UDT_EPOLL_IN, false);
+   s_UDTUnited.m_EPoll.update_events(m_SocketID, m_sPollID, UDT_EPOLL_OUT, false);
    s_UDTUnited.m_EPoll.update_events(m_SocketID, m_sPollID, UDT_EPOLL_ERR, true);
+
    // then remove itself from all epoll monitoring
    try
    {
diff --git work/git/barchart-udt/barchart-udt-core/target/udt/udt4/src/epoll.cpp work/git/barchart-udt/barchart-udt-core/src/main/c++/udt/src/epoll.cpp
index 0e7ddb1..2805ed3 100644
--- work/git/barchart-udt/barchart-udt-core/target/udt/udt4/src/epoll.cpp
+++ work/git/barchart-udt/barchart-udt-core/src/main/c++/udt/src/epoll.cpp
@@ -99,10 +99,13 @@ int CEPoll::add_usock(const int eid, const UDTSOCKET& u, const int* events)
    if (p == m_mPolls.end())
       throw CUDTException(5, 13);
 
+   // BARCHART: Manage all event types.
    if (!events || (*events & UDT_EPOLL_IN))
       p->second.m_sUDTSocksIn.insert(u);
    if (!events || (*events & UDT_EPOLL_OUT))
       p->second.m_sUDTSocksOut.insert(u);
+   if (!events || (*events & UDT_EPOLL_ERR))
+      p->second.m_sUDTSocksEx.insert(u);
 
    return 0;
 }
@@ -225,6 +228,11 @@ int CEPoll::wait(const int eid, set<UDTSOCKET>* readfds, set<UDTSOCKET>* writefd
          total += p->second.m_sUDTWrites.size() + p->second.m_sUDTExcepts.size();
       }
 
+      // BARCHART: Remove errors when reported.
+      if(total > 0 && !p->second.m_sUDTExcepts.empty()){
+    	  p->second.m_sUDTExcepts.clear();
+      }
+
       if (lrfds || lwfds)
       {
          #ifdef LINUX
